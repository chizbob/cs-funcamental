Exercise

1. In your own words, explain what clean code is and why it is important.

A: Clean code allows you to maintain and fix bugs easily, and makes it easy to work with other developers as well. 

2. 
3. Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.

FUNCTION do(x, y)               // Creating a new function
 IF y = "F" THEN               // Check if y is equal "F"
 SET z to (x−32) * (5/9)       // Formula to convert degrees fahrenheit to celsius
 PRINT z                       // Print result
 ELSE IF y = "C" THEN          // If y not equal to "F", check if equal to "C"
 SET z to x * 1.8000 + 32.00   // Formula to convert degrees celsius to fahrenheit
 PRINT z                       // Print result
 END IF
END FUNCTION

A: I think comment is better located before the code starts instead of being on the right. 
Also you don't need to comment about every single line you write. Only when necessary to help anyone understand what you are trying to achieve.


//Convert degrees F to C 
FUNCTION do(x, y)
  IF y = "F" THEN 
    SET z to (x−32) * (5/9)
    PRINT z

//Convert degrees C to F
  ELSE IF y = "C" THEN
    SET z to x * 1.8000 + 32.00
    PRINT z
  
  END IF
END FUNCTION

4. Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.

FUNCTION calcPercent(sum, total)
 IF NOT(total = 0) THEN
     SET percentage to sum / total * 100
 ELSE
   PRINT "Sorry, cannot divide by 0"
 END IF

 PRINT percentage
END FUNCTION

A: I would make the arguments "sum" and "total" more specific, in order to give clear ideas what they are. Right now, why the difference between the two is not clear.  

5. Using pseudocode, refactor the code for the following examples using the principles you have learned in this checkpoint.

  a. The following function prints the subtotal of a customer's transaction and receives payment accordingly.
  
  FUNCTION checkOutCustomer(subTotal, discountRate, paymentType)
   PRINT "Your total due is: " + subTotal * discountRate + (subTotal * tax)

   IF paymentType = 'CASH' THEN
       CALL getPayment RETURNING amount
       PRINT "Change due: " + amount - subTotal * discountRate + (subTotal * tax)
   ELSE IF paymentType = 'CREDIT CARD' THEN
       CALL getPayment RETURNING amount
       PRINT "Your credit card has been charged: " + subTotal * discountRate + (subTotal * tax)
   END IF
END FUNCTION

  A: I'd separate the total price part from payment type part. It would look something like this: 

//calculate total price 
function takes in subtotal, discountrate, taxrate
create a variable to capture total price 
  total price equals (subttoal * (1-discountrate)) * (1-taxrate) 
  return the total price 

//another function to adjust total price according to the payment method 
if cash ? (cash formula) : (creditcard formula)


