####Exercises
1. What is a hash table?
A: a data structure that implements an associative array abstract data type, a structure that can map keys to values. 

2. What is hashing?
A: Generating a value from a string of text using a mathematical function

3. How does a hash table store data?
A: A hash table stores key-value pairs by placing them at a particular location in an array.

4. How are hash tables and objects different?
A: In hash tables, all the values are different instances of data keyed by the unique key(ID), but objects hold different types of data bundled together.  

5. Determine whether you would use a hash table or an object to store each of the following pieces of data:
A: The key here is whether the data can be associated based on a certain category. If the data can be associated in any way, it'd be better to use hash table, otherwise object. 

• A list of pets and their unique names. -> Object 

• The name, age, and the birthday of your best friend. -> Hash table 

• The name and location of every company in a given city. -> Hash table 

• All of the books checked out from a library by a particular individual. -> Hash table 

• The primary and secondary phone numbers for a contact. -> Hash table 

6. Build a system that allows a sales associate to enter a customer's name, address, and phone number into the system and look up customers using their phone numbers. Store this information in a hash table.

class CustomerDB{
  constructor(){
    this.db = []
    this.k = 10
  }

  hash(key){
    let hashCode = 0
    let trueIndex = null
       for(let i=0; i<key.length; i++){
         hashCode += key.charCodeAt(i)
       }
    trueIndex = hashCode % this.k 
    return trueIndex
  }
  
  addCustomer(info){
    let trueIndex = this.hash(info.phone)
    this.db[trueIndex] === undefined ? this.db[trueIndex] = info :  this.db[trueIndex].push(info)
    return this.db
  }
  
  lookup(customer){
    let trueIndex = this.hash(customer.phone)
    return this.db[trueIndex]
  } 
}

let print = new CustomerDB()

console.log(print.addCustomer({name: "St.Bae", phone:"9876543", address: "1 dog lane"}))
console.log(print.addCustomer({name: "Soo", phone: "1234567", address: "2 cat way"}))
// console.log(print.addCustomer({name: "Yubin", phone: "4297654", address: "3 Pineapple dr"}))
// console.log(print.addCustomer({name: "Chung", phone: "5768790", address: "55 circle cir."}))
console.log(print.lookup({
  name: "Soo",
  phone: "1234567"
}))

7. Build a system that allows a store owner to track their store's inventory using a hash table for storage.

class Inventory{
  constructor(){
    this.db = []
    this.k = 4
  }
  
  hash(string){
    let hashCode = 0
    for(let i = 0; i < string.length; i++){
      hashCode += string.charCodeAt(i)
    }
    return hashCode % this.k
  }

  add(info){
    let index = this.hash(info.productName)
    !this.db[index] ? this.db[index] = info : this.db[index].push(info)
  }

  lookup(info){
    let index = this.hash(info.productName)
    return this.db[index]
  }
}

let print = new Inventory()

print.add({productName: "Shampoo", manufacturer: "Soft.Inc", quantity: 50});
print.add({productName: "Conditioner", manufacturer: "Soft.Inc", quantity: 30});
print.add({productName: "Makeup Set", manufacturer: "Beutify & Co.", quantity: 10});
print.add({productName: "Coffee maker", manufacturer: "The Beans", quantity: 10});
print.add({productName: "Chair", manufacturer: "Chairman", quantity: 10});

console.log(print.lookup({productName: "Shampoo"}));
console.log(print.lookup({productName: "Conditioner"}))
console.log(print.lookup({productName: "momo"}));

8. Build a system that allows digital copies of newspapers to be entered and searched by publisher and publication date. Use hash tables to store the necessary data.
