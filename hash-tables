####Exercises
1. What is a hash table?
A: a data structure that implements an associative array abstract data type, a structure that can map keys to values. 

2. What is hashing?
A: Generating a value from a string of text using a mathematical function

3. How does a hash table store data?
A: A hash table stores key-value pairs by placing them at a particular location in an array.

4. How are hash tables and objects different?
A: In hash tables, all the values are different instances of data keyed by the unique key(ID), but objects hold different types of data bundled together.  

5. Determine whether you would use a hash table or an object to store each of the following pieces of data:
A: The key here is whether the data can be associated based on a certain category. If the data can be associated in any way, it'd be better to use hash table, otherwise object. 

• A list of pets and their unique names. -> Object 

• The name, age, and the birthday of your best friend. -> Hash table 

• The name and location of every company in a given city. -> Hash table 

• All of the books checked out from a library by a particular individual. -> Hash table 

• The primary and secondary phone numbers for a contact. -> Hash table 

6. Build a system that allows a sales associate to enter a customer's name, address, and phone number into the system and look up customers using their phone numbers. Store this information in a hash table.

class CustomerDB{
  constructor(){
    this.db = []
  }

  hash(phone){
    let result = 0
       for(let i=0; i<phone.length; i++){
         result += phone.charCodeAt(i)
       }
    return result % 100
  }
  
  addCustomer(info){
      let index = this.hash(info.phone)
      this.db[index] === undefined ? this.db[index] = [info] :  this.db[index].push(info)
  }
  
  lookup(phone){
    let index = this.hash(phone)
    return this.db[index]
  } 
}

let print = new CustomerDB()

console.log(print.addCustomer({name: "St.Bae", phone:"78798799", address: "1 dog lane"}))
console.log(print.addCustomer({name: "Soo", phone: "9668103", address: "2 cat way"}))
// console.log(print.addCustomer({name: "Yubin", phone: "4297654", address: "3 pineApple dr"}))
// console.log(print.addCustomer({name: "Chung", phone: "5768790", address: "55 circle cir."}))
// console.log(print.lookup({name: "soo", phone: "9668103"}))
console.log(print.lookup("9668103"))

7. Build a system that allows a store owner to track their store's inventory using a hash table for storage.

class Inventory{
  constructor(){
    this.db = []
  }

  hash(productName){
    let result = 0
       for(let i=0; i<productName.length; i++){
         result += productName.charCodeAt(i)
       }
    return result % 100
  }

  addInventory(info){
      let index = this.hash(info.productName)
      this.db[index] === undefined ? this.db[index] = [info] : this.db[index].push(info)
      //console.log(this.db[index])
  }

  lookup(productName){
    let index = this.hash(productName)
    return this.db[index].filter(a => a.productName === productName)
  } 
}

let print = new Inventory()

print.addInventory({productName: "Shampoo", manufacturer: "Soft.Inc", quantity: 50})
// print.addInventory({productName: "Conditioner", manufacturer: "Soft.Inc", quantity: 30})
// print.addInventory({productName: "Makeup Set", manufacturer: "Beutify & Co.", quantity: 10})
console.log(print.lookup("Shampoo"))

8. Build a system that allows digital copies of newspapers to be entered and searched by publisher and publication date. Use hash tables to store the necessary data.

class DigitalNews{
  constructor(){
    this.db = []
  }

  hash(publisher){
    let result = 0
       for(let i=0; i<publisher.length; i++){
         result += publisher.charCodeAt(i)
       }
    return result % 100
  }
  
  addNews(newsInfo){
      let index = this.hash(newsInfo.publisher)
      this.db[index] === undefined ? this.db[index] = [newsInfo] : this.db[index].push(newsInfo)
  }
  
  lookup(publisher, publishedDate){
    let index = this.hash(publisher)
    return this.db[index].filter(a => a.publishedDate === publishedDate)
  } 
}

let print = new DigitalNews()

print.addNews({publisher: "NBC", publishedDate: "12/5/18", headline: "Christmas is Coming"})
print.addNews({publisher: "Washington Post", publishedDate: "12/12/17", headline: "New Year's Resolutions"})
console.log(print.lookup("NBC", "12/5/18"))